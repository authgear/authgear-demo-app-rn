name: CI

on:
  push:
    branches:
    - '*'
    - '!gh-pages'
  pull_request:
    branches:
    - '*'
    - '!gh-pages'
  workflow_dispatch: {}
  schedule:
  - cron: "35 9 * * THU"

jobs:
  react_native_ios:
    if: ${{ github.repository == 'authgear/authgear-demo-app-rn' }}
    # As of 2024-10-03, macos-15 has only 30.0.3 Android build tools, which does not seem correct.
    # So we still use macos-14
    runs-on: macos-14
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version-file: "./.tool-versions"
    - uses: ruby/setup-ruby@v1
      with:
        # runs 'bundle install' and caches installed gems automatically
        bundler-cache: true
    - run: sudo xcode-select -s /Applications/Xcode_16.2.app/Contents/Developer
    - run: make npm-ci
    - run: make pod-install
    - uses: authgear/gh-actions-install-apple-certificate-and-provisioning-profile@v1
      with:
        certificate_base64: ${{ secrets.IOS_CERTIFICATE_BASE64 }}
        certificate_password: ${{ secrets.IOS_CERTIFICATE_PASSWORD }}
        provisioning_profile_base64: ${{ secrets.IOS_PROVISIONING_PROFILE_BASE64 }}
        keychain_password: ${{ secrets.IOS_KEYCHAIN_PASSWORD }}
    - uses: authgear/gh-actions-create-fastlane-api-key-json-file@v1
      with:
        api_key_id: ${{ secrets.IOS_API_KEY_ID }}
        api_key_issuer: ${{ secrets.IOS_API_KEY_ISSUER }}
        api_key_base64: ${{ secrets.IOS_API_KEY_BASE64 }}
        output_path: ./build/fastlane-api-key.json
    - run: make ios-build-app
    - run: make ios-upload-app
      if: ${{ github.ref == 'refs/heads/master' }}

  react_native_android:
    if: github.ref == 'refs/heads/master'
    # As of 2024-10-03, macos-15 has only 30.0.3 Android build tools, which does not seem correct.
    # So we still use macos-14
    runs-on: macos-14
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version-file: "./.tool-versions"
    - uses: actions/setup-java@v4
      with:
        # The Java that comes with macos-15 is also temurin.
        distribution: "temurin"
        java-version: "17"
    - run: npm install -g appcenter-cli
    - run: npm ci
    - name: Set versionCode
      run: |
        VERSION_CODE=$(date +%s)
        sed -I "" "s/versionCode 1/versionCode $VERSION_CODE/" ./android/app/build.gradle
    - name: Build unsigned APK
      working-directory: ./android
      run: |
        java --version
        ./gradlew :app:assembleRelease
    - name: Install keystore
      env:
        ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
      run: |
        KEYSTORE_PATH=$RUNNER_TEMP/keystore.jks
        echo -n "$ANDROID_KEYSTORE_BASE64" | base64 --decode -o $KEYSTORE_PATH
    - name: Run zipalign
      run: |
        ls "$ANDROID_HOME/build-tools/"
        BUILD_TOOLS_VERSION=$(sed -n -E 's/.*buildToolsVersion = "(.*)"/\1/p' ./android/build.gradle)
        "$ANDROID_HOME/build-tools/$BUILD_TOOLS_VERSION/zipalign" -c -v 4 ./android/app/build/outputs/apk/release/app-release-unsigned.apk
    - name: Run apksigner
      env:
        ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
        ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
        ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
      run: |
        BUILD_TOOLS_VERSION=$(sed -n -E 's/.*buildToolsVersion = "(.*)"/\1/p' ./android/build.gradle)
        "$ANDROID_HOME/build-tools/$BUILD_TOOLS_VERSION/apksigner" sign \
          --ks $RUNNER_TEMP/keystore.jks \
          --ks-key-alias "$ANDROID_KEY_ALIAS" \
          --ks-pass "pass:$ANDROID_KEYSTORE_PASSWORD" \
          --key-pass "pass:$ANDROID_KEY_PASSWORD" \
          --out ./android/app/build/outputs/apk/release/app-release-signed.apk \
          ./android/app/build/outputs/apk/release/app-release-unsigned.apk
    - name: Distribute to App Center
      env:
        APPCENTER_ACCESS_TOKEN: ${{ secrets.ANDROID_APPCENTER_ACCESS_TOKEN }}
      run: appcenter distribute release --debug --silent --file ./android/app/build/outputs/apk/release/app-release-signed.apk --group "Collaborators" --app "Oursky/Authgear-Demo-React-Native-Android-For-Sales" --release-notes "no release notes"
